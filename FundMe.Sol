// SPDX-License-Identifier: MIT

pragma solidity >=0.6.0 <0.9.0;

// getting external data from chainlink contracts
import "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol";

//contract should accept some kind of payment
contract FundMe {

  //to know total amount funded for particular address
  mapping(address => uint256) public addressToAmountFunded;
  
  function fund() public payable {
    addressToAmountFunded[msg.sender] += msg.value;
  }
  
  /*payable function (color red in remix) can recieve ETH while being called;
  if we try to send ETH to any function that is not mentioned as payable,
  the transaction will be rejected and fail.*/
  
  //function to get priceFeed version
  function getVersion public view returns (uint256) {
    AggregatorV3Interface priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331); //Kovan ETH-USD address https://docs.chain.link/docs/ethereum-addresses/
    return priceFeed.version();
  }
  
  
  
}
